{"version":3,"file":"BmVooL7kxYOi-0cEjkl.js","names":[],"sources":["../../app/components/ltAllMap.vue","../../app/components/ltAllMap.vue"],"sourcesContent":["<template>\n  <div ref=\"mapRef\" class=\"map h-100\" style=\"min-height: 300px\"></div>\n</template>\n\n<script setup lang=\"ts\">\nimport {App, createApp, onMounted, reactive, ref} from 'vue';\nimport {useRouter} from 'vue-router';\nimport * as L from 'leaflet';\nimport * as ltData from '../api/ltData';\nimport {useLeafletMap} from './useLeafletMap';\nimport {t} from './useI18n';\nimport {useAppTitle, routeTitlePart} from './useAppTitle';\nimport LtGalleryCard from './ltGalleryCard.vue';\nimport type {CommonsFile} from '../model';\nimport {useLtRoute} from './useLtRoute';\n\nconst {$query, hasFilesUserCategory} = useLtRoute();\nconst $router = useRouter();\nconst mapRef = ref<HTMLElement | null>(null);\n\nuseAppTitle(routeTitlePart(), t('Map'));\n\nonMounted(async () => {\n  const {map} = useLeafletMap(mapRef);\n  if (hasFilesUserCategory.value) {\n    const titles = await ltData.getFiles($query.value);\n    const files = await ltData.getCoordinates(titles);\n    const bounds = files.flatMap(title => {\n      const marker = buildMarker(title);\n      marker?.addTo(map);\n      return marker ? [marker.getLatLng()] : [];\n    });\n    map.fitBounds(bounds);\n  } else {\n    geosearch(map);\n    map.on('moveend', () => geosearch(map));\n    map.on('zoomend', () => geosearch(map));\n  }\n});\n\nasync function geosearch(map: L.Map) {\n  const files = await ltData.geosearch(map.getBounds());\n  map.eachLayer(l => {\n    if (l instanceof L.CircleMarker && !l.isPopupOpen()) {\n      map.removeLayer(l);\n    }\n  });\n  files.forEach(f => buildMarker(f)?.addTo(map));\n}\n\nfunction buildMarker(title: CommonsFile): L.CircleMarker | undefined {\n  if (!title.coordinates.isDefined) return;\n  const {lat, lng} = title.coordinates;\n  return new L.CircleMarker({lat, lng}, {color: '#2a4b8d'})\n    .bindTooltip(title.file)\n    .bindPopup(buildPopup(title));\n}\n\nfunction buildPopup(title: CommonsFile): L.Popup {\n  let app: App;\n  let div: HTMLDivElement;\n  const popup = new L.Popup({minWidth: 400});\n  popup.setContent(() => {\n    title = reactive(title);\n    title.$geolocate = $router.resolve({\n      name: 'geolocate',\n      query: {files: title.file}\n    }).href;\n    app = createApp(LtGalleryCard, {title});\n    ltData.getFileDetails(title.pageid, 'categories|imageinfo', 'extmetadata').then(fileDetails => {\n      Object.assign(title, fileDetails);\n    });\n    div = document.createElement('div');\n    return div;\n  });\n  popup.on('add', () => app.mount(div));\n  popup.on('remove', () => app.unmount());\n  return popup;\n}\n</script>\n\n<style scoped>\n.map {\n  margin-left: calc(var(--bs-gutter-x) * -0.5);\n  margin-right: calc(var(--bs-gutter-x) * -0.5);\n}\n:deep(.leaflet-popup-content-wrapper) {\n  background-color: var(--bs-body-bg);\n}\n:deep(.leaflet-popup-content) {\n  margin: 0.5rem;\n}\n</style>\n","<template>\n  <div ref=\"mapRef\" class=\"map h-100\" style=\"min-height: 300px\"></div>\n</template>\n\n<script setup lang=\"ts\">\nimport {App, createApp, onMounted, reactive, ref} from 'vue';\nimport {useRouter} from 'vue-router';\nimport * as L from 'leaflet';\nimport * as ltData from '../api/ltData';\nimport {useLeafletMap} from './useLeafletMap';\nimport {t} from './useI18n';\nimport {useAppTitle, routeTitlePart} from './useAppTitle';\nimport LtGalleryCard from './ltGalleryCard.vue';\nimport type {CommonsFile} from '../model';\nimport {useLtRoute} from './useLtRoute';\n\nconst {$query, hasFilesUserCategory} = useLtRoute();\nconst $router = useRouter();\nconst mapRef = ref<HTMLElement | null>(null);\n\nuseAppTitle(routeTitlePart(), t('Map'));\n\nonMounted(async () => {\n  const {map} = useLeafletMap(mapRef);\n  if (hasFilesUserCategory.value) {\n    const titles = await ltData.getFiles($query.value);\n    const files = await ltData.getCoordinates(titles);\n    const bounds = files.flatMap(title => {\n      const marker = buildMarker(title);\n      marker?.addTo(map);\n      return marker ? [marker.getLatLng()] : [];\n    });\n    map.fitBounds(bounds);\n  } else {\n    geosearch(map);\n    map.on('moveend', () => geosearch(map));\n    map.on('zoomend', () => geosearch(map));\n  }\n});\n\nasync function geosearch(map: L.Map) {\n  const files = await ltData.geosearch(map.getBounds());\n  map.eachLayer(l => {\n    if (l instanceof L.CircleMarker && !l.isPopupOpen()) {\n      map.removeLayer(l);\n    }\n  });\n  files.forEach(f => buildMarker(f)?.addTo(map));\n}\n\nfunction buildMarker(title: CommonsFile): L.CircleMarker | undefined {\n  if (!title.coordinates.isDefined) return;\n  const {lat, lng} = title.coordinates;\n  return new L.CircleMarker({lat, lng}, {color: '#2a4b8d'})\n    .bindTooltip(title.file)\n    .bindPopup(buildPopup(title));\n}\n\nfunction buildPopup(title: CommonsFile): L.Popup {\n  let app: App;\n  let div: HTMLDivElement;\n  const popup = new L.Popup({minWidth: 400});\n  popup.setContent(() => {\n    title = reactive(title);\n    title.$geolocate = $router.resolve({\n      name: 'geolocate',\n      query: {files: title.file}\n    }).href;\n    app = createApp(LtGalleryCard, {title});\n    ltData.getFileDetails(title.pageid, 'categories|imageinfo', 'extmetadata').then(fileDetails => {\n      Object.assign(title, fileDetails);\n    });\n    div = document.createElement('div');\n    return div;\n  });\n  popup.on('add', () => app.mount(div));\n  popup.on('remove', () => app.unmount());\n  return popup;\n}\n</script>\n\n<style scoped>\n.map {\n  margin-left: calc(var(--bs-gutter-x) * -0.5);\n  margin-right: calc(var(--bs-gutter-x) * -0.5);\n}\n:deep(.leaflet-popup-content-wrapper) {\n  background-color: var(--bs-body-bg);\n}\n:deep(.leaflet-popup-content) {\n  margin: 0.5rem;\n}\n</style>\n"],"mappings":"4YCgBA,GAAM,CAAC,SAAQ,wBAAwB,IACjC,EAAU,IACV,EAAS,EAAwB,MAEvC,EAAY,IAAkB,EAAE,QAEhC,EAAU,SAAY,CACpB,GAAM,CAAC,OAAO,EAAc,GAC5B,GAAI,EAAqB,MAAO,CAC9B,IAAM,EAAS,MAAA,EAAsB,EAAO,OACtC,EAAQ,MAAA,EAA4B,GACpC,EAAS,EAAM,QAAQ,GAAS,CACpC,IAAM,EAAS,EAAY,GAE3B,OADA,GAAQ,MAAM,GACP,EAAS,CAAC,EAAO,aAAe,KAEzC,EAAI,UAAU,QAEd,EAAU,GACV,EAAI,GAAG,cAAiB,EAAU,IAClC,EAAI,GAAG,cAAiB,EAAU,MAItC,eAAe,EAAU,EAAY,CACnC,IAAM,EAAQ,MAAA,EAAuB,EAAI,aACzC,EAAI,UAAU,GAAK,CACb,aAAA,GAA+B,CAAC,EAAE,eACpC,EAAI,YAAY,KAGpB,EAAM,QAAQ,GAAK,EAAY,IAAI,MAAM,IAG3C,SAAS,EAAY,EAAgD,CACnE,GAAI,CAAC,EAAM,YAAY,UAAW,OAClC,GAAM,CAAC,MAAK,OAAO,EAAM,YACzB,OAAO,IAAA,EAAmB,CAAC,MAAK,OAAM,CAAC,MAAO,YAC3C,YAAY,EAAM,MAClB,UAAU,EAAW,IAG1B,SAAS,EAAW,EAA6B,CAC/C,IAAI,EACA,EACE,EAAQ,IAAA,EAAY,CAAC,SAAU,MAgBrC,OAfA,EAAM,gBACJ,EAAQ,EAAS,GACjB,EAAM,WAAa,EAAQ,QAAQ,CACjC,KAAM,YACN,MAAO,CAAC,MAAO,EAAM,QACpB,KACH,EAAM,EAAU,EAAe,CAAC,UAChC,EAAsB,EAAM,OAAQ,uBAAwB,eAAe,KAAK,GAAe,CAC7F,OAAO,OAAO,EAAO,KAEvB,EAAM,SAAS,cAAc,OACtB,IAET,EAAM,GAAG,UAAa,EAAI,MAAM,IAChC,EAAM,GAAG,aAAgB,EAAI,WACtB,oBA5EP,EAAoE,MAAA,SAA3D,SAAJ,IAAI,EAAS,MAAM,YAAY,MAAA,CAAA,aAAA"}