{"version":3,"file":"B2pxNlgIiGl2WJSTaCa.js","names":[],"sources":["../../app/components/ltFilesSelector.vue","../../app/components/ltFilesSelector.vue"],"sourcesContent":["<!-- eslint-disable vue/no-v-html -->\n<template>\n  <h2 v-if=\"!userInfo?.user\" class=\"mt-4\">{{ t('Sign in') }}</h2>\n  <p v-if=\"!userInfo?.user\">\n    <span>\n      {{ t('In order to allow locator-tool to modify file description pages, sign in first:') }}\n    </span>\n    <a class=\"btn btn-success icon-link ms-2\" :href=\"loginURL()\">\n      <DoorOpen />\n      <span>{{ t('Log in') }}</span>\n    </a>\n  </p>\n  <p v-if=\"userInfo?.user\" class=\"mt-4\">{{ msgLoggedIn }}</p>\n  <h2>{{ t('Select files to geolocate') }}</h2>\n  <ul class=\"nav nav-pills my-3\">\n    <li class=\"nav-item\">\n      <button\n        class=\"nav-link\"\n        :class=\"{active: $tab === Tab.CATEGORY}\"\n        @click=\"$tab = Tab.CATEGORY\"\n      >\n        {{ t('Category') }}\n      </button>\n    </li>\n    <li class=\"nav-item\">\n      <button class=\"nav-link\" :class=\"{active: $tab === Tab.USER}\" @click=\"$tab = Tab.USER\">\n        {{ t('User files') }}\n      </button>\n    </li>\n    <li class=\"nav-item\">\n      <button class=\"nav-link\" :class=\"{active: $tab === Tab.FILES}\" @click=\"$tab = Tab.FILES\">\n        {{ t('File list') }}\n      </button>\n    </li>\n  </ul>\n  <form v-show=\"$tab === Tab.USER\" @submit.stop.prevent=\"nextForCategory()\">\n    <div class=\"mb-4\">\n      <label for=\"inputUser\">{{ t('User') }}</label>\n      <input\n        id=\"inputUser\"\n        v-model=\"user\"\n        class=\"form-control\"\n        list=\"datalistUser\"\n        placeholder=\"User:…\"\n      />\n    </div>\n    <div class=\"row\">\n      <div class=\"mb-4 col-sm-4\">\n        <label for=\"inputUserLimit\" translate-comment=\"maximum number of files\">\n          {{ t('Limit') }}\n        </label>\n        <input id=\"inputUserLimit\" v-model=\"userLimit\" class=\"form-control\" type=\"number\" />\n      </div>\n      <div class=\"mb-4 col-sm-4\">\n        <label for=\"inputUserStart\">{{ t('Start timestamp') }}</label>\n        <input id=\"inputUserStart\" v-model=\"userStart\" class=\"form-control\" type=\"date\" />\n      </div>\n      <div class=\"mb-4 col-sm-4\">\n        <label for=\"inputUserEnd\">{{ t('End timestamp') }}</label>\n        <input id=\"inputUserEnd\" v-model=\"userEnd\" class=\"form-control\" type=\"date\" />\n      </div>\n    </div>\n    <div class=\"mb-4\">\n      <button class=\"btn btn-success icon-link me-2\" :disabled=\"!user\" @click=\"nextForUser()\">\n        <GeoAlt />\n        <span>{{ t('Load User files to geolocate') }}</span>\n      </button>\n      <button\n        class=\"btn btn-secondary icon-link me-2\"\n        :disabled=\"!user\"\n        @click=\"nextForUser('map')\"\n      >\n        <GlobeEuropeAfrica />\n        <span>{{ t('Show User files on map') }}</span>\n      </button>\n      <button\n        class=\"btn btn-secondary icon-link me-2\"\n        :disabled=\"!user\"\n        @click=\"nextForUser('gallery')\"\n      >\n        <FileImage />\n        <span>{{ t('Show User files as gallery') }}</span>\n      </button>\n      <input class=\"invisible\" type=\"submit\" :disabled=\"!user\" />\n      <lt-spinner v-if=\"isLoading\" />\n      <datalist id=\"datalistUser\">\n        <option v-for=\"i in userSuggestions\" :key=\"i\" :value=\"i\"></option>\n      </datalist>\n    </div>\n  </form>\n  <form v-show=\"$tab === Tab.CATEGORY\" @submit.stop.prevent=\"nextForCategory()\">\n    <div class=\"row\">\n      <div class=\"mb-4 col-lg-10\">\n        <label for=\"inputCategory\">{{ t('Category') }}</label>\n        <input\n          id=\"inputCategory\"\n          v-model=\"category\"\n          class=\"form-control\"\n          list=\"datalistCategory\"\n          placeholder=\"Category:…\"\n        />\n      </div>\n      <div class=\"mb-4 col-lg-2\">\n        <label\n          for=\"inputCategoryDepth\"\n          translate-comment=\"Depth of category tree\"\n          translate-context=\"Category\"\n        >\n          {{ t('Depth') }}\n        </label>\n        <input id=\"inputCategoryDepth\" v-model=\"categoryDepth\" class=\"form-control\" type=\"number\" />\n      </div>\n    </div>\n    <div class=\"mb-4\">\n      <button\n        class=\"btn btn-success icon-link me-2\"\n        :disabled=\"!category\"\n        @click=\"nextForCategory()\"\n      >\n        <GeoAlt />\n        <span>{{ t('Load Category to geolocate') }}</span>\n      </button>\n      <button\n        class=\"btn btn-secondary icon-link me-2\"\n        :disabled=\"!category\"\n        @click=\"nextForCategory('map')\"\n      >\n        <GlobeEuropeAfrica />\n        <span>{{ t('Show Category on map') }}</span>\n      </button>\n      <button\n        class=\"btn btn-secondary icon-link me-2\"\n        :disabled=\"!category\"\n        @click=\"nextForCategory('gallery')\"\n      >\n        <FileImage />\n        <span>{{ t('Show Category as gallery') }}</span>\n      </button>\n      <input class=\"invisible\" type=\"submit\" :disabled=\"!category\" />\n    </div>\n    <lt-spinner v-if=\"isLoading\" />\n    <datalist id=\"datalistCategory\">\n      <option v-for=\"i in categorySuggestions\" :key=\"i\" :value=\"i\"></option>\n    </datalist>\n  </form>\n  <form v-show=\"$tab === Tab.FILES\" @submit.stop.prevent=\"nextForCategory()\">\n    <div class=\"mb-4\">\n      <label for=\"inputTitles\">{{ t('File list') }}</label>\n      <textarea\n        id=\"inputTitles\"\n        v-model=\"titles\"\n        class=\"form-control\"\n        rows=\"10\"\n        placeholder=\"File:…\"\n        @paste=\"onFilesPaste($event)\"\n      ></textarea>\n      <p\n        class=\"form-text\"\n        v-html=\"\n          t(\n            'When a clipboard content containing HTML code (for instance a copied selection from a Commons gallery) is pasted here, locator-tool tries to extract <code>File:</code>s from the code.'\n          )\n        \"\n      ></p>\n    </div>\n    <div class=\"mb-4\">\n      <button class=\"btn btn-success icon-link me-2\" :disabled=\"!titleList.length\" @click=\"next()\">\n        <GeoAlt />\n        <span>{{ msgLoadGeolocate }}</span>\n      </button>\n      <button\n        class=\"btn btn-secondary icon-link me-2\"\n        :disabled=\"!titleList.length\"\n        @click=\"next('map')\"\n      >\n        <GlobeEuropeAfrica />\n        <span>{{ msgShowMap }}</span>\n      </button>\n      <button\n        class=\"btn btn-secondary icon-link me-2\"\n        :disabled=\"!titleList.length\"\n        @click=\"next('gallery')\"\n      >\n        <FileImage />\n        <span>{{ msgShowGallery }}</span>\n      </button>\n    </div>\n  </form>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, ref} from 'vue';\nimport {watchDebounced} from '@vueuse/core';\nimport * as ltData from '../api/ltData';\nimport {getUserInfo, loginURL} from '../api/ltDataAuth';\nimport {useRouter} from 'vue-router';\nimport ltSpinner from './ltSpinner.vue';\nimport {t} from './useI18n';\nimport DoorOpen from 'bootstrap-icons/icons/door-open.svg?component';\nimport FileImage from 'bootstrap-icons/icons/file-image.svg?component';\nimport GeoAlt from 'bootstrap-icons/icons/geo-alt.svg?component';\nimport GlobeEuropeAfrica from 'bootstrap-icons/icons/globe-europe-africa.svg?component';\nimport {useLtRoute} from './useLtRoute';\n\nenum Tab {\n  CATEGORY = 1,\n  USER = 2,\n  FILES = 3\n}\n\nconst {$query} = useLtRoute();\nconst $routes = useRouter();\n\nconst isLoading = ref(false);\nconst $tab = ref<Tab>($query.value.user ? Tab.USER : Tab.CATEGORY);\nconst category = ref<string | undefined>($query.value.category);\nconst categoryDepth = ref(tryParse(parseInt, $query.value.categoryDepth, 3));\nconst categorySuggestions = ref<string[]>([]);\nconst user = ref<string | undefined>($query.value.user);\nconst userLimit = ref(tryParse(parseInt, $query.value.userLimit, undefined));\nconst userStart = ref<string | undefined>($query.value.userStart);\nconst userEnd = ref<string | undefined>($query.value.userEnd);\nconst userSuggestions = ref<string[]>([]);\nconst titles = ref<string>('');\n\nfunction tryParse<T>(parser: (string: string) => T, text: string, fallback: T): T {\n  if (!text) {\n    return fallback;\n  }\n  try {\n    return parser(text as string);\n  } catch {\n    return fallback;\n  }\n}\n\nconst {data: userInfo} = getUserInfo();\n\nwatchDebounced(\n  category,\n  async category => {\n    isLoading.value = true;\n    try {\n      categorySuggestions.value = await ltData.getCategoriesForPrefix(category);\n    } finally {\n      isLoading.value = false;\n    }\n  },\n  {debounce: 500}\n);\n\nwatchDebounced(\n  user,\n  async user => {\n    isLoading.value = true;\n    try {\n      userSuggestions.value = await ltData.getUsersForPrefix(user);\n      console.log(userSuggestions.value);\n    } finally {\n      isLoading.value = false;\n    }\n  },\n  {debounce: 500}\n);\n\nfunction next(name = 'geolocate') {\n  const files = titleList.value.join('|');\n  $routes.push({name, query: {files}});\n}\n\nfunction nextForUser(name = 'geolocate') {\n  $routes.push({\n    name,\n    query: {\n      user: user.value,\n      userLimit: userLimit.value,\n      userStart: userStart.value,\n      userEnd: userEnd.value\n    }\n  });\n}\n\nfunction nextForCategory(name = 'geolocate') {\n  $routes.push({\n    name,\n    query: {\n      category: category.value,\n      categoryDepth: categoryDepth.value\n    }\n  });\n}\n\nconst titleList = computed<string[]>({\n  get: () =>\n    titles.value\n      .split('\\n')\n      .map(file => file?.split('|')[0])\n      .filter(x => x),\n  set: files => (titles.value = files?.join('\\n'))\n});\n\nfunction onFilesPaste($event: ClipboardEvent) {\n  try {\n    if (!$event.clipboardData) return;\n    const html = $event.clipboardData.getData('text/html');\n    if (!html || !/<a/.test(html)) return;\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n    const links = doc.getElementsByTagName('a');\n    const files: Record<string, boolean> = {};\n    [...links]\n      .map(a => decodeURI(a.href))\n      .filter(href => !!href)\n      .map(href => href.replace(/.*File:/, 'File:'))\n      .forEach(file => (files[file] = true));\n    titleList.value = Object.keys(files);\n    $event.preventDefault();\n  } catch (ex) {\n    console.warn('Could not parse HTML clipboard content', ex);\n  }\n}\n\nconst msgLoggedIn = computed(() =>\n  t('Hello {{$ctrl.userInfo}}!').replace('{{$ctrl.userInfo}}', userInfo.value?.user)\n);\nconst msgLoadGeolocate = computed(() =>\n  t('Load {{$ctrl.titleList.length}} files to geolocate').replace(\n    '{{$ctrl.titleList.length}}',\n    titleList.value.length\n  )\n);\nconst msgShowMap = computed(() =>\n  t('Show {{$ctrl.titleList.length}} files on map').replace(\n    '{{$ctrl.titleList.length}}',\n    titleList.value.length\n  )\n);\nconst msgShowGallery = computed(() =>\n  t('Show {{$ctrl.titleList.length}} files as gallery').replace(\n    '{{$ctrl.titleList.length}}',\n    titleList.value.length\n  )\n);\n</script>\n","<!-- eslint-disable vue/no-v-html -->\n<template>\n  <h2 v-if=\"!userInfo?.user\" class=\"mt-4\">{{ t('Sign in') }}</h2>\n  <p v-if=\"!userInfo?.user\">\n    <span>\n      {{ t('In order to allow locator-tool to modify file description pages, sign in first:') }}\n    </span>\n    <a class=\"btn btn-success icon-link ms-2\" :href=\"loginURL()\">\n      <DoorOpen />\n      <span>{{ t('Log in') }}</span>\n    </a>\n  </p>\n  <p v-if=\"userInfo?.user\" class=\"mt-4\">{{ msgLoggedIn }}</p>\n  <h2>{{ t('Select files to geolocate') }}</h2>\n  <ul class=\"nav nav-pills my-3\">\n    <li class=\"nav-item\">\n      <button\n        class=\"nav-link\"\n        :class=\"{active: $tab === Tab.CATEGORY}\"\n        @click=\"$tab = Tab.CATEGORY\"\n      >\n        {{ t('Category') }}\n      </button>\n    </li>\n    <li class=\"nav-item\">\n      <button class=\"nav-link\" :class=\"{active: $tab === Tab.USER}\" @click=\"$tab = Tab.USER\">\n        {{ t('User files') }}\n      </button>\n    </li>\n    <li class=\"nav-item\">\n      <button class=\"nav-link\" :class=\"{active: $tab === Tab.FILES}\" @click=\"$tab = Tab.FILES\">\n        {{ t('File list') }}\n      </button>\n    </li>\n  </ul>\n  <form v-show=\"$tab === Tab.USER\" @submit.stop.prevent=\"nextForCategory()\">\n    <div class=\"mb-4\">\n      <label for=\"inputUser\">{{ t('User') }}</label>\n      <input\n        id=\"inputUser\"\n        v-model=\"user\"\n        class=\"form-control\"\n        list=\"datalistUser\"\n        placeholder=\"User:…\"\n      />\n    </div>\n    <div class=\"row\">\n      <div class=\"mb-4 col-sm-4\">\n        <label for=\"inputUserLimit\" translate-comment=\"maximum number of files\">\n          {{ t('Limit') }}\n        </label>\n        <input id=\"inputUserLimit\" v-model=\"userLimit\" class=\"form-control\" type=\"number\" />\n      </div>\n      <div class=\"mb-4 col-sm-4\">\n        <label for=\"inputUserStart\">{{ t('Start timestamp') }}</label>\n        <input id=\"inputUserStart\" v-model=\"userStart\" class=\"form-control\" type=\"date\" />\n      </div>\n      <div class=\"mb-4 col-sm-4\">\n        <label for=\"inputUserEnd\">{{ t('End timestamp') }}</label>\n        <input id=\"inputUserEnd\" v-model=\"userEnd\" class=\"form-control\" type=\"date\" />\n      </div>\n    </div>\n    <div class=\"mb-4\">\n      <button class=\"btn btn-success icon-link me-2\" :disabled=\"!user\" @click=\"nextForUser()\">\n        <GeoAlt />\n        <span>{{ t('Load User files to geolocate') }}</span>\n      </button>\n      <button\n        class=\"btn btn-secondary icon-link me-2\"\n        :disabled=\"!user\"\n        @click=\"nextForUser('map')\"\n      >\n        <GlobeEuropeAfrica />\n        <span>{{ t('Show User files on map') }}</span>\n      </button>\n      <button\n        class=\"btn btn-secondary icon-link me-2\"\n        :disabled=\"!user\"\n        @click=\"nextForUser('gallery')\"\n      >\n        <FileImage />\n        <span>{{ t('Show User files as gallery') }}</span>\n      </button>\n      <input class=\"invisible\" type=\"submit\" :disabled=\"!user\" />\n      <lt-spinner v-if=\"isLoading\" />\n      <datalist id=\"datalistUser\">\n        <option v-for=\"i in userSuggestions\" :key=\"i\" :value=\"i\"></option>\n      </datalist>\n    </div>\n  </form>\n  <form v-show=\"$tab === Tab.CATEGORY\" @submit.stop.prevent=\"nextForCategory()\">\n    <div class=\"row\">\n      <div class=\"mb-4 col-lg-10\">\n        <label for=\"inputCategory\">{{ t('Category') }}</label>\n        <input\n          id=\"inputCategory\"\n          v-model=\"category\"\n          class=\"form-control\"\n          list=\"datalistCategory\"\n          placeholder=\"Category:…\"\n        />\n      </div>\n      <div class=\"mb-4 col-lg-2\">\n        <label\n          for=\"inputCategoryDepth\"\n          translate-comment=\"Depth of category tree\"\n          translate-context=\"Category\"\n        >\n          {{ t('Depth') }}\n        </label>\n        <input id=\"inputCategoryDepth\" v-model=\"categoryDepth\" class=\"form-control\" type=\"number\" />\n      </div>\n    </div>\n    <div class=\"mb-4\">\n      <button\n        class=\"btn btn-success icon-link me-2\"\n        :disabled=\"!category\"\n        @click=\"nextForCategory()\"\n      >\n        <GeoAlt />\n        <span>{{ t('Load Category to geolocate') }}</span>\n      </button>\n      <button\n        class=\"btn btn-secondary icon-link me-2\"\n        :disabled=\"!category\"\n        @click=\"nextForCategory('map')\"\n      >\n        <GlobeEuropeAfrica />\n        <span>{{ t('Show Category on map') }}</span>\n      </button>\n      <button\n        class=\"btn btn-secondary icon-link me-2\"\n        :disabled=\"!category\"\n        @click=\"nextForCategory('gallery')\"\n      >\n        <FileImage />\n        <span>{{ t('Show Category as gallery') }}</span>\n      </button>\n      <input class=\"invisible\" type=\"submit\" :disabled=\"!category\" />\n    </div>\n    <lt-spinner v-if=\"isLoading\" />\n    <datalist id=\"datalistCategory\">\n      <option v-for=\"i in categorySuggestions\" :key=\"i\" :value=\"i\"></option>\n    </datalist>\n  </form>\n  <form v-show=\"$tab === Tab.FILES\" @submit.stop.prevent=\"nextForCategory()\">\n    <div class=\"mb-4\">\n      <label for=\"inputTitles\">{{ t('File list') }}</label>\n      <textarea\n        id=\"inputTitles\"\n        v-model=\"titles\"\n        class=\"form-control\"\n        rows=\"10\"\n        placeholder=\"File:…\"\n        @paste=\"onFilesPaste($event)\"\n      ></textarea>\n      <p\n        class=\"form-text\"\n        v-html=\"\n          t(\n            'When a clipboard content containing HTML code (for instance a copied selection from a Commons gallery) is pasted here, locator-tool tries to extract <code>File:</code>s from the code.'\n          )\n        \"\n      ></p>\n    </div>\n    <div class=\"mb-4\">\n      <button class=\"btn btn-success icon-link me-2\" :disabled=\"!titleList.length\" @click=\"next()\">\n        <GeoAlt />\n        <span>{{ msgLoadGeolocate }}</span>\n      </button>\n      <button\n        class=\"btn btn-secondary icon-link me-2\"\n        :disabled=\"!titleList.length\"\n        @click=\"next('map')\"\n      >\n        <GlobeEuropeAfrica />\n        <span>{{ msgShowMap }}</span>\n      </button>\n      <button\n        class=\"btn btn-secondary icon-link me-2\"\n        :disabled=\"!titleList.length\"\n        @click=\"next('gallery')\"\n      >\n        <FileImage />\n        <span>{{ msgShowGallery }}</span>\n      </button>\n    </div>\n  </form>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, ref} from 'vue';\nimport {watchDebounced} from '@vueuse/core';\nimport * as ltData from '../api/ltData';\nimport {getUserInfo, loginURL} from '../api/ltDataAuth';\nimport {useRouter} from 'vue-router';\nimport ltSpinner from './ltSpinner.vue';\nimport {t} from './useI18n';\nimport DoorOpen from 'bootstrap-icons/icons/door-open.svg?component';\nimport FileImage from 'bootstrap-icons/icons/file-image.svg?component';\nimport GeoAlt from 'bootstrap-icons/icons/geo-alt.svg?component';\nimport GlobeEuropeAfrica from 'bootstrap-icons/icons/globe-europe-africa.svg?component';\nimport {useLtRoute} from './useLtRoute';\n\nenum Tab {\n  CATEGORY = 1,\n  USER = 2,\n  FILES = 3\n}\n\nconst {$query} = useLtRoute();\nconst $routes = useRouter();\n\nconst isLoading = ref(false);\nconst $tab = ref<Tab>($query.value.user ? Tab.USER : Tab.CATEGORY);\nconst category = ref<string | undefined>($query.value.category);\nconst categoryDepth = ref(tryParse(parseInt, $query.value.categoryDepth, 3));\nconst categorySuggestions = ref<string[]>([]);\nconst user = ref<string | undefined>($query.value.user);\nconst userLimit = ref(tryParse(parseInt, $query.value.userLimit, undefined));\nconst userStart = ref<string | undefined>($query.value.userStart);\nconst userEnd = ref<string | undefined>($query.value.userEnd);\nconst userSuggestions = ref<string[]>([]);\nconst titles = ref<string>('');\n\nfunction tryParse<T>(parser: (string: string) => T, text: string, fallback: T): T {\n  if (!text) {\n    return fallback;\n  }\n  try {\n    return parser(text as string);\n  } catch {\n    return fallback;\n  }\n}\n\nconst {data: userInfo} = getUserInfo();\n\nwatchDebounced(\n  category,\n  async category => {\n    isLoading.value = true;\n    try {\n      categorySuggestions.value = await ltData.getCategoriesForPrefix(category);\n    } finally {\n      isLoading.value = false;\n    }\n  },\n  {debounce: 500}\n);\n\nwatchDebounced(\n  user,\n  async user => {\n    isLoading.value = true;\n    try {\n      userSuggestions.value = await ltData.getUsersForPrefix(user);\n      console.log(userSuggestions.value);\n    } finally {\n      isLoading.value = false;\n    }\n  },\n  {debounce: 500}\n);\n\nfunction next(name = 'geolocate') {\n  const files = titleList.value.join('|');\n  $routes.push({name, query: {files}});\n}\n\nfunction nextForUser(name = 'geolocate') {\n  $routes.push({\n    name,\n    query: {\n      user: user.value,\n      userLimit: userLimit.value,\n      userStart: userStart.value,\n      userEnd: userEnd.value\n    }\n  });\n}\n\nfunction nextForCategory(name = 'geolocate') {\n  $routes.push({\n    name,\n    query: {\n      category: category.value,\n      categoryDepth: categoryDepth.value\n    }\n  });\n}\n\nconst titleList = computed<string[]>({\n  get: () =>\n    titles.value\n      .split('\\n')\n      .map(file => file?.split('|')[0])\n      .filter(x => x),\n  set: files => (titles.value = files?.join('\\n'))\n});\n\nfunction onFilesPaste($event: ClipboardEvent) {\n  try {\n    if (!$event.clipboardData) return;\n    const html = $event.clipboardData.getData('text/html');\n    if (!html || !/<a/.test(html)) return;\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n    const links = doc.getElementsByTagName('a');\n    const files: Record<string, boolean> = {};\n    [...links]\n      .map(a => decodeURI(a.href))\n      .filter(href => !!href)\n      .map(href => href.replace(/.*File:/, 'File:'))\n      .forEach(file => (files[file] = true));\n    titleList.value = Object.keys(files);\n    $event.preventDefault();\n  } catch (ex) {\n    console.warn('Could not parse HTML clipboard content', ex);\n  }\n}\n\nconst msgLoggedIn = computed(() =>\n  t('Hello {{$ctrl.userInfo}}!').replace('{{$ctrl.userInfo}}', userInfo.value?.user)\n);\nconst msgLoadGeolocate = computed(() =>\n  t('Load {{$ctrl.titleList.length}} files to geolocate').replace(\n    '{{$ctrl.titleList.length}}',\n    titleList.value.length\n  )\n);\nconst msgShowMap = computed(() =>\n  t('Show {{$ctrl.titleList.length}} files on map').replace(\n    '{{$ctrl.titleList.length}}',\n    titleList.value.length\n  )\n);\nconst msgShowGallery = computed(() =>\n  t('Show {{$ctrl.titleList.length}} files as gallery').replace(\n    '{{$ctrl.titleList.length}}',\n    titleList.value.length\n  )\n);\n</script>\n"],"mappings":"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"}