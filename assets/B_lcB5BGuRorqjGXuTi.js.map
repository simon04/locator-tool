{"version":3,"file":"B_lcB5BGuRorqjGXuTi.js","names":[],"sources":["../../app/components/ltGallery.vue","../../app/components/ltGallery.vue"],"sourcesContent":["<template>\n  <div v-if=\"isLoading\" class=\"mt-3 row\">\n    <div class=\"col-sm-12\">\n      <div class=\"jumbotron\">\n        <p>{{ t('Loading file details …') }}</p>\n        <lt-spinner />\n      </div>\n    </div>\n  </div>\n\n  <div v-if=\"!isLoading\" class=\"mt-3 row\">\n    <div class=\"col-sm-12\">\n      <label class=\"me-3\">{{ t('Sorting') }}:</label>\n      <div v-for=\"column in sortColumns\" :key=\"column.key\" class=\"form-check form-check-inline\">\n        <label class=\"form-check-label\">\n          <span class=\"icon-link\">\n            <component :is=\"column.icon\" v-if=\"column.icon\" />\n            {{ column.label }}\n          </span>\n          <input\n            v-model=\"sortColumn\"\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"sortColumn\"\n            :value=\"column.key\"\n          />\n        </label>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"mt-3 row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4\">\n    <div v-for=\"title in sortedTitles\" :key=\"title\" class=\"col\">\n      <lt-gallery-card :title=\"title\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {onMounted, ref} from 'vue';\nimport {useSorted} from '@vueuse/core';\nimport {FileDetails, getFileDetails} from '../api/ltData';\nimport {getCoordinates} from '../api/ltData';\nimport {getFiles} from '../api/ltData';\nimport {CommonsFile} from '../model';\nimport ltSpinner from './ltSpinner.vue';\nimport {t} from './useI18n';\nimport {useAppTitle, routeTitlePart} from './useAppTitle';\nimport CalendarEvent from 'bootstrap-icons/icons/calendar-event.svg?component';\nimport PersonFill from 'bootstrap-icons/icons/person-fill.svg?component';\nimport ltGalleryCard from './ltGalleryCard.vue';\nimport {useLtRoute} from './useLtRoute';\n\nconst {$query} = useLtRoute();\nconst isLoading = ref(true);\nconst titles = ref<(CommonsFile & FileDetails)[]>([]);\n\ntype SortColumn = keyof Pick<\n  CommonsFile & FileDetails,\n  'file' | 'description' | 'author' | 'timestamp'\n>;\nconst sortColumns: {key: SortColumn; label: string; icon?: string}[] = [\n  {key: 'file', label: t('Title'), icon: undefined},\n  {key: 'description', label: t('Description'), icon: undefined},\n  {key: 'author', label: t('Author'), icon: PersonFill},\n  {key: 'timestamp', label: t('Date'), icon: CalendarEvent}\n];\nconst sortColumn = ref<SortColumn>('file');\nconst sortDirection = ref(1);\nconst sortedTitles = useSorted(\n  titles,\n  (t1, t2) => sortDirection.value * (t1[sortColumn.value]?.localeCompare(t2[sortColumn.value]) ?? 0)\n);\n\nuseAppTitle(routeTitlePart(), t('Gallery'));\n\nonMounted(async () => {\n  const titles0 = await getFiles($query.value);\n  const titles1 = await getCoordinates(titles0);\n  titles.value = titles1 as unknown as (CommonsFile & FileDetails)[];\n  isLoading.value = false;\n  for (const title of titles.value) {\n    getFileDetails(title.pageid, 'categories|imageinfo', 'extmetadata').then(fileDetails =>\n      Object.assign(title, fileDetails)\n    );\n  }\n});\n</script>\n","<template>\n  <div v-if=\"isLoading\" class=\"mt-3 row\">\n    <div class=\"col-sm-12\">\n      <div class=\"jumbotron\">\n        <p>{{ t('Loading file details …') }}</p>\n        <lt-spinner />\n      </div>\n    </div>\n  </div>\n\n  <div v-if=\"!isLoading\" class=\"mt-3 row\">\n    <div class=\"col-sm-12\">\n      <label class=\"me-3\">{{ t('Sorting') }}:</label>\n      <div v-for=\"column in sortColumns\" :key=\"column.key\" class=\"form-check form-check-inline\">\n        <label class=\"form-check-label\">\n          <span class=\"icon-link\">\n            <component :is=\"column.icon\" v-if=\"column.icon\" />\n            {{ column.label }}\n          </span>\n          <input\n            v-model=\"sortColumn\"\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"sortColumn\"\n            :value=\"column.key\"\n          />\n        </label>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"mt-3 row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4\">\n    <div v-for=\"title in sortedTitles\" :key=\"title\" class=\"col\">\n      <lt-gallery-card :title=\"title\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {onMounted, ref} from 'vue';\nimport {useSorted} from '@vueuse/core';\nimport {FileDetails, getFileDetails} from '../api/ltData';\nimport {getCoordinates} from '../api/ltData';\nimport {getFiles} from '../api/ltData';\nimport {CommonsFile} from '../model';\nimport ltSpinner from './ltSpinner.vue';\nimport {t} from './useI18n';\nimport {useAppTitle, routeTitlePart} from './useAppTitle';\nimport CalendarEvent from 'bootstrap-icons/icons/calendar-event.svg?component';\nimport PersonFill from 'bootstrap-icons/icons/person-fill.svg?component';\nimport ltGalleryCard from './ltGalleryCard.vue';\nimport {useLtRoute} from './useLtRoute';\n\nconst {$query} = useLtRoute();\nconst isLoading = ref(true);\nconst titles = ref<(CommonsFile & FileDetails)[]>([]);\n\ntype SortColumn = keyof Pick<\n  CommonsFile & FileDetails,\n  'file' | 'description' | 'author' | 'timestamp'\n>;\nconst sortColumns: {key: SortColumn; label: string; icon?: string}[] = [\n  {key: 'file', label: t('Title'), icon: undefined},\n  {key: 'description', label: t('Description'), icon: undefined},\n  {key: 'author', label: t('Author'), icon: PersonFill},\n  {key: 'timestamp', label: t('Date'), icon: CalendarEvent}\n];\nconst sortColumn = ref<SortColumn>('file');\nconst sortDirection = ref(1);\nconst sortedTitles = useSorted(\n  titles,\n  (t1, t2) => sortDirection.value * (t1[sortColumn.value]?.localeCompare(t2[sortColumn.value]) ?? 0)\n);\n\nuseAppTitle(routeTitlePart(), t('Gallery'));\n\nonMounted(async () => {\n  const titles0 = await getFiles($query.value);\n  const titles1 = await getCoordinates(titles0);\n  titles.value = titles1 as unknown as (CommonsFile & FileDetails)[];\n  isLoading.value = false;\n  for (const title of titles.value) {\n    getFileDetails(title.pageid, 'categories|imageinfo', 'extmetadata').then(fileDetails =>\n      Object.assign(title, fileDetails)\n    );\n  }\n});\n</script>\n"],"mappings":"iuBCqDA,GAAM,CAAC,UAAU,IACX,EAAY,EAAI,IAChB,EAAS,EAAmC,IAM5C,EAAiE,CACrE,CAAC,IAAK,OAAQ,MAAO,EAAE,SAAU,KAAM,IAAA,IACvC,CAAC,IAAK,cAAe,MAAO,EAAE,eAAgB,KAAM,IAAA,IACpD,CAAC,IAAK,SAAU,MAAO,EAAE,UAAW,KAAM,GAC1C,CAAC,IAAK,YAAa,MAAO,EAAE,QAAS,KAAM,IAEvC,EAAa,EAAgB,QAC7B,EAAgB,EAAI,GACpB,EAAe,EACnB,GACC,EAAI,IAAO,EAAc,OAAS,EAAG,EAAW,QAAQ,cAAc,EAAG,EAAW,SAAW,WAGlG,EAAY,IAAkB,EAAE,YAEhC,EAAU,SAAY,CACpB,IAAM,EAAU,MAAM,EAAS,EAAO,OAChC,EAAU,MAAM,EAAe,GACrC,EAAO,MAAQ,EACf,EAAU,MAAQ,GAClB,IAAK,IAAM,KAAS,EAAO,MACzB,EAAe,EAAM,OAAQ,uBAAwB,eAAe,KAAK,GACvE,OAAO,OAAO,EAAO,4BAlFd,EAAA,OAAA,IAAX,EAOM,MAPN,EAOM,CANJ,EAKM,MALN,EAKM,CAJJ,EAGM,MAHN,EAGM,CAFJ,EAAwC,IAAA,KAAA,EAAlC,EAAA,GAAC,2BAAA,GACP,EAAc,UAAA,EAAA,GAAA,IAKR,EAAA,gBAAA,IAAZ,EAmBM,MAnBN,EAmBM,CAlBJ,EAiBM,MAjBN,EAiBM,CAhBJ,EAA+C,QAA/C,EAA+C,EAAxB,EAAA,GAAC,YAAc,IAAC,IAAA,IACvC,EAcM,EAAA,KAAA,EAdgB,EAAV,GAAZ,EAcM,MAAA,CAd8B,IAAK,EAAO,IAAK,MAAM,iCACzD,EAYQ,QAZR,EAYQ,CAXN,EAGO,OAHP,EAGO,CAF8B,EAAO,MAAA,IAA1C,EAAkD,EAAlC,EAAO,MAAI,CAAA,IAAA,KAAA,EAAA,GAAA,IAAA,EAAuB,IAClD,EAAG,EAAO,OAAK,KAAA,EAEjB,EAME,QAAA,mCALmB,MAAA,EACnB,MAAM,mBACN,KAAK,QACL,KAAK,aACJ,MAAO,EAAO,mBAJN,EAAA,wBAWnB,EAIM,MAJN,EAIM,EAAA,EAAA,IAHJ,EAEM,EAAA,KAAA,EAFe,EAAA,GAAT,QAAZ,EAEM,MAAA,CAF8B,IAAK,EAAO,MAAM,QACpD,EAAkC,EAAA,CAAT,SAAK,KAAA,EAAA,CAAA"}